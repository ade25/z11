# vhost: locomotec - zope8

server {
    listen *:${ports:http};
    server_name www.${hosts:zope8};
    return 301 $scheme://${hosts:zope8}$request_uri;
}

server {
    listen *:${ports:http};
    server_name ${hosts:zope8};
    access_log ${buildout:directory}/var/log/${hosts:zope8}.log;

    gzip             on;
    gzip_min_length  1000;
    gzip_proxied     any;
    gzip_types   text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    location ${urls:fallback} {
        root ${buildout:directory}/htdocs;
        index index.html index.htm;
        break;
    }

    location ~* ^.+\.(css|js|jpg|jpeg|gif|png|ico|gz|svg|svgz|ttf|otf|woff|eot|mp4|ogg|ogv|webm|pdf)$ {
        try_files $uri @backend;
        expires max;
        access_log off;
        add_header Pragma public;
        add_header Cache-Control "public";
        proxy_buffering         on;
        proxy_cache_valid 200 120m;
    }

    location / {
        # rewrite ^/(.*)$ /VirtualHostBase/http/${hosts:zope8}:${ports:http}/${sites:zope8}/VirtualHostRoot/$1 break;
        rewrite ^/(.*)$ /VirtualHostBase/http/${hosts:zope8}:${ports:http}/VirtualHostRoot/$1 break;
        proxy_pass http://cache;
        proxy_connect_timeout 75;
        proxy_read_timeout 185;
        proxy_set_header X-Forwarded-For $remote_addr;
        client_max_body_size 10m;
        client_body_timeout 1200;
    }
    location @backend {
        # rewrite ^/(.*)$ /VirtualHostBase/http/${hosts:zope8}:${ports:http}/${sites:zope8}/VirtualHostRoot/$1 break;
        rewrite ^/(.*)$ /VirtualHostBase/http/${hosts:zope8}:${ports:http}/VirtualHostRoot/$1 break;
        proxy_pass http://cache;
        proxy_connect_timeout 75;
        proxy_read_timeout 185;
        proxy_set_header X-Forwarded-For $remote_addr;
        client_max_body_size 10m;
        client_body_timeout 1200;
    }
}

# HTTPS server
server {
    listen  *:${ports:https} ssl spdy;
    server_name ${hosts:zope8};
    access_log ${buildout:directory}/var/log/ssl-access.log;
    root ${buildout:directory}/src/${sites:main}.sitetheme/${sites:main}/sitetheme/resources/dist/;

    ssl on;
    ssl_certificate      ${ssl:certificate};
    ssl_certificate_key  ${ssl:key};
    ssl_verify_depth    3;
    # Adjust connection keepalive for SPDY and non-SPDY clients:
    spdy_keepalive_timeout 300; # up from 180 secs default
    keepalive_timeout 300; # up from 75 secs default

    ssl_session_tickets off;

    # enable SPDY header compression
    spdy_headers_comp 6;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

    # courtesy of https://wiki.mozilla.org/Security/Server_Side_TLS#Recommended_Ciphersuite
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
    ssl_prefer_server_ciphers on;

    # OCSP stapling...
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate ${ssl:certificate};
    resolver 8.8.8.8;

    # Inform browser of SPDY availability
    add_header Alternate-Protocol  443:npn-spdy/3;
    # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";

    # This is the 'panic' error message page. HAProxy will redirect here
    # if all nodes are down. Other parts of the stack may choose to
    # redirect to this URL as well.
    location ${urls:fallback} {
        root ${buildout:directory}/htdocs;
        break;
    }
    location /css/ {
        root ${buildout:directory}/src/${sites:main}.sitetheme/${sites:main}/sitetheme/resources/dist/;
        expires max;
        access_log off;
        add_header Pragma public;
        add_header Cache-Control "public";
        proxy_buffering         on;
        proxy_cache_valid 200 120m;
    }
    #location /assets/ {
    #    root ${buildout:directory}/src/rms.sitetheme/rms/sitetheme/resources/dist/;
    #}
    #location /js/ {
    #    root ${buildout:directory}/src/rms.sitetheme/rms/sitetheme/resources/dist/;
    #}

    # Set expires max on static file types (make sure you are using cache busting filenames or query params):
    location ~* ^.+\.(css|js|jpg|jpeg|gif|png|ico|gz|svg|svgz|ttf|otf|woff|eot|mp4|ogg|ogv|webm|pdf)$ {
        try_files $uri @backend;
        expires max;
        access_log off;
        add_header Pragma public;
        add_header Cache-Control "public";
        proxy_buffering         on;
        proxy_cache_valid 200 120m;
    }
    location / {
        rewrite ^/(.*)$ /VirtualHostBase/https/${hosts:public}:${ports:https}/${sites:main}/VirtualHostRoot/$1 break;
        # Back end (for SSL content)
        proxy_pass http://cache;
        proxy_connect_timeout 75;
        proxy_read_timeout 185;
        proxy_set_header X-Real-IP  $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-Port 443;
        proxy_set_header Host $host;
    }
    location @backend {
        rewrite ^/(.*)$ /VirtualHostBase/https/${hosts:public}:${ports:https}/${sites:main}/VirtualHostRoot/$1 break;
        # Back end (for SSL content)
        proxy_pass http://cache;
        proxy_connect_timeout 75;
        proxy_read_timeout 185;
        proxy_set_header X-Real-IP  $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-Port 443;
        proxy_set_header Host $host;
    }
}

